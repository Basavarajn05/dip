import cv2
import numpy as np
from matplotlib import pyplot as plt

def display_image(image, title, subplot_position):
    plt.subplot(2, 3, subplot_position)
    plt.title(title)
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.axis('off')

# Load the image
image_path = "C:\\Users\\petra\\Downloads\\Transformations.jpg"
Original_image = cv2.imread(image_path)
image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

if image is None:
    print("Error: Image not found or unable to read the image.")
else:
    # Negative transformation
    negative_image = np.uint8(255 - image)

    # Log transformation
    c = 255 / np.log(1 + np.max(image))
    log_transformed_image = np.uint8(c * np.log1p(image))

    # Power Law transformation
    gamma = 1.1
    power_law_transformed_image = np.uint8(np.power(image / 255.0, gamma) * 255)

    # Contrast Stretching
    min_intensity = np.min(image)
    max_intensity = np.max(image)
    contrast_stretched_image = np.uint8(255 * (image - min_intensity) / (max_intensity - min_intensity))

    # Displaying the images
    display_image(cv2.cvtColor(Original_image, cv2.COLOR_BGR2RGB), 'Original', 1)
    display_image(cv2.cvtColor(negative_image, cv2.COLOR_GRAY2RGB), 'Negative', 2)
    display_image(cv2.cvtColor(log_transformed_image, cv2.COLOR_GRAY2RGB), 'Log Transform', 3)
    display_image(cv2.cvtColor(power_law_transformed_image, cv2.COLOR_GRAY2RGB), 'Power Law Transform', 4)
    display_image(cv2.cvtColor(contrast_stretched_image, cv2.COLOR_GRAY2RGB), 'Contrast Stretched', 5)

    plt.tight_layout()
    plt.show()
